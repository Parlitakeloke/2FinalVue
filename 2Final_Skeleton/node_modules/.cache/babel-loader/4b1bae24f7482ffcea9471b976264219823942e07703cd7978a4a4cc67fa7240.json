{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'TurismoView',\n  data() {\n    return {\n      agenda: [],\n      provincia: \"\",\n      mesus: \"\",\n      provincias: [],\n      meses: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre']\n    };\n  },\n  mounted() {\n    axios.get('json/agenda.json').then(response => {\n      this.agenda = response.data;\n      this.agenda.forEach(element => {\n        if (!this.provincias.includes(element.territory)) {\n          this.provincias.push(element.territory);\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  computed: {\n    filtrar() {\n      return this.turismo.filter(dato => {\n        // if (this.selectedMonth === '') {\n        //     return true;\n        // } else {\n        //     let date = new Date(dato.eventStartDate.split('/').reverse().join('-'));\n        //     let monthIndex = this.months.indexOf(this.selectedMonth);\n        //     return date.getMonth() === monthIndex;\n        // }\n\n        if (this.mesus === '') {\n          //return this.turismo;\n          return true;\n        } else {\n          let mes = dato.eventStartDate.split('/')[1];\n          let mesIndex = this.months.indexOf(this.selectedMonth);\n          return mes == mesIndex + 1;\n        }\n      }).filter(dato => {\n        if (this.selectedPlace === '') {\n          return this.turismo;\n        } else {\n          return dato.territory.includes(this.selectedPlace);\n          // return dato.territory === this.selectedPlace;\n        }\n      });\n    }\n  },\n\n  methods: {}\n};","map":{"version":3,"mappings":";AAuCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,aAAa;EAEnBC,IAAI,GAAG;IAEH,OAAO;MAEHC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAC,EAAE;MACbC,KAAI,EAAI,CAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,OAAO,EAAC,QAAQ,EAAC,YAAY,EAAC,SAAS,EAAE,WAAW,EAAC,WAAW;IAE9H;EAEJ,CAAC;EAEDC,OAAO,GAAG;IAENR,KAAK,CAACS,GAAG,CAAC,kBAAkB,EACvBC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACR,MAAK,GAAIQ,QAAQ,CAACT,IAAI;MAC3B,IAAI,CAACC,MAAM,CAACS,OAAO,CAACC,OAAM,IAAK;QAC3B,IAAG,CAAC,IAAI,CAACP,UAAU,CAACQ,QAAQ,CAACD,OAAO,CAACE,SAAS,CAAC,EAAC;UAC5C,IAAI,CAACT,UAAU,CAACU,IAAI,CAACH,OAAO,CAACE,SAAS,CAAC;QAC3C;MACJ,CAAC,CAAC;IACN,CAAC,EACAE,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;EAGV,CAAC;EAEDG,QAAQ,EAAC;IAGLC,OAAO,GAAE;MAGL,OAAO,IAAI,CAACC,OAAM,CACjBC,MAAM,CAACC,IAAG,IAAK;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;;QAGA,IAAI,IAAI,CAACpB,KAAI,KAAM,EAAE,EAAC;UAClB;UACA,OAAO,IAAI;QACf,CAAC,MAAI;UACD,IAAIqB,GAAE,GAAID,IAAI,CAACE,cAAc,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC3C,IAAIC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACC,aAAa,CAAC;UACtD,OAAON,GAAE,IAAKG,QAAQ,GAAC,CAAC;QAE5B;MACJ,CAAC,EACAL,MAAM,CAACC,IAAG,IAAK;QACZ,IAAI,IAAI,CAACQ,aAAY,KAAM,EAAE,EAAE;UAC3B,OAAO,IAAI,CAACV,OAAO;QACvB,OAAO;UACH,OAAOE,IAAI,CAACV,SAAS,CAACD,QAAQ,CAAC,IAAI,CAACmB,aAAa,CAAC;UAClD;QACJ;MACJ,CAAC,CAAC;IAGN;EAGJ,CAAC;;EAGDC,OAAO,EAAC,CAOR;AAIJ","names":["axios","name","data","agenda","provincia","mesus","provincias","meses","mounted","get","then","response","forEach","element","includes","territory","push","catch","error","console","log","computed","filtrar","turismo","filter","dato","mes","eventStartDate","split","mesIndex","months","indexOf","selectedMonth","selectedPlace","methods"],"sourceRoot":"","sources":["C:\\Users\\unaia\\Desktop\\2FinalVue\\2FinalVue\\2Final_Skeleton\\src\\views\\TurismoView.vue"],"sourcesContent":["<template>\r\n    <img src=\"../assets/euskadi-blanco.jpg\" alt=\"Basque Tour\">\r\n\r\n\r\n    <select name=\"provincia\" id=\"provincia\" v-model=\"provincia\">\r\n    <option value=\"\">Todas</option>\r\n     <option v-for=\"(territorios, index) in provincias\" :key=\"index\" :value=territorios>{{ territorios }}</option>\r\n    </select>\r\n\r\n    <select name=\"mes\" id=\"mes\" v-model=\"mesus\">\r\n    <option value=\"\">Todas</option>\r\n     <option v-for=\"(mesex, index) in meses\" :key=\"index\" :value=mesex>{{ mesex }}</option>\r\n    </select>\r\n\r\n    <table>\r\n\r\n        <tr>\r\n            <th>Evento</th>\r\n            <th>Fecha</th>\r\n            <th>Territorio</th>\r\n            <th>Descripcion</th>\r\n            <th>Mas info</th>\r\n            <th>Favoritos</th>\r\n        </tr>\r\n\r\n        <tr v-for=\"(agendas, index) in agenda\" :key=\"index\" :class=\"{'Bizkaia':agendas.territory == 'Bizkaia', 'Araba':agendas.territory == 'Araba', 'Gipuzkoa':agendas.territory == 'Gipuzkoa', 'todos':agendas.territory == 'Araba Bizkaia Gipuzkoa', 'todes':agendas.territory == 'Bizkaia Araba Gipuzkoa'}\">\r\n                <td>{{ agendas.documentName }}</td>\r\n                <td>{{ agendas.eventStartDate }}</td>\r\n                <td>{{ agendas.territory }}</td>\r\n                <td>{{ agendas.documentDescription }}</td>\r\n                <td>{{ agendas.friendlyUrl }}</td>\r\n                <td><button>AÃ±adir</button></td>\r\n        </tr>\r\n\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'TurismoView',\r\n\r\n    data() {\r\n\r\n        return {\r\n\r\n            agenda: [],\r\n            provincia: \"\",\r\n            mesus: \"\",\r\n            provincias:[],\r\n            meses : ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre', 'Noviembre','Diciembre'],\r\n\r\n        }\r\n\r\n    },\r\n\r\n    mounted() {\r\n\r\n        axios.get('json/agenda.json')\r\n            .then((response) => {\r\n                this.agenda = response.data;\r\n                this.agenda.forEach(element => {\r\n                    if(!this.provincias.includes(element.territory)){\r\n                        this.provincias.push(element.territory);\r\n                    }\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n    },\r\n\r\n    computed:{\r\n\r\n\r\n        filtrar(){\r\n\r\n\r\n            return this.turismo\r\n            .filter(dato => {\r\n                // if (this.selectedMonth === '') {\r\n                //     return true;\r\n                // } else {\r\n                //     let date = new Date(dato.eventStartDate.split('/').reverse().join('-'));\r\n                //     let monthIndex = this.months.indexOf(this.selectedMonth);\r\n                //     return date.getMonth() === monthIndex;\r\n                // }\r\n\r\n\r\n                if (this.mesus === ''){\r\n                    //return this.turismo;\r\n                    return true;\r\n                }else{\r\n                    let mes = dato.eventStartDate.split('/')[1];\r\n                    let mesIndex = this.months.indexOf(this.selectedMonth);\r\n                    return mes == mesIndex+1;\r\n\r\n                }\r\n            })\r\n            .filter(dato => {\r\n                if (this.selectedPlace === '') {\r\n                    return this.turismo;\r\n                } else {\r\n                    return dato.territory.includes(this.selectedPlace);\r\n                    // return dato.territory === this.selectedPlace;\r\n                }\r\n            });\r\n            \r\n\r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n    methods:{\r\n\r\n\r\n       \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<style>\r\n\r\n\r\n.Gipuzkoa{\r\n\r\nbackground-color: lightblue;\r\n\r\n}\r\n\r\n.Bizkaia{\r\n\r\nbackground-color: lightgreen;\r\n\r\n}\r\n\r\n.Araba{\r\n\r\n\r\n    background-color: lightsalmon;\r\n\r\n\r\n}\r\n\r\n.todos{\r\n\r\nbackground-color: rgb(209, 209, 16);\r\n\r\n}\r\n\r\n.todes{\r\n\r\nbackground-color: rgb(209, 209, 16);\r\n\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}